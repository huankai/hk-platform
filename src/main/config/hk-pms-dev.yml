server:
  servlet:
    context-path: /
    session:
      cookie:
        name: pms_jsession
        http-only: true
spring:
  main:
    banner-mode: 'off'
  servlet:
    multipart:
      enabled: false # 禁用文件上传功能
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: true
  messages:
    basename: org/springframework/security/messages,com/hk/core/i18n/messages,messages
    encoding: utf-8
    cache-duration: -1ms
  jpa:
    show-sql: true
    generate-ddl: false
    properties:
      hibernate:
      #        hbm2ddl:
      #         auto: upload
      # 解决懒加载在非事务中的 no-session 的问题 @see https://stackoverflow.com/questions/36583185/spring-data-jpa-could-not-initialize-proxy-no-session-with-methods-marke
         enable_lazy_load_no_trans: true
         dialect: org.hibernate.dialect.PostgreSQL95Dialect

  datasource:
    name: druid
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.64.135:5432/hk_pms
    username: postgres
    password:
    druid:
      initial-size: 1
      max-active: 20
      min-idle: 1
      max-wait: 6000
      time-between-eviction-runs-millis: 60000
      test-on-borrow: true
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,log4j2
      filter:
        stat:
          slow-sql-millis: 5000
      connection-properties: druid.stat.mergeSql=true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        allow: 127.0.0.1
        login-username: druidAdmin
        login-password: druidAdmin@%*
      web-stat-filter:
        enabled: true
        url-pattern: /**
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"

################################################################### redis
  redis:
    password: 1234567
    host: 127.0.0.1
    port: 6379
    database: 2
    timeout: 3000ms
    lettuce:
      pool:
        max-active: 8
        min-idle: 0
        max-idle: 8
        max-wait: -1ms
  cache:
    type: redis

################################################################### eureka
eureka:
  instance:
    prefer-ip-address: false
    hostname: 127.0.0.1
  client:
    service-url:
      defaultZone: http://root:root123@127.0.0.1:8761/eureka
######################################################### mybatis 配置
mybatis:
  mapper-locations: classpath:mybatis/mappers/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl

######################################################### mybatis pageHelper 配置
pagehelper:
  reasonable: false
  support-methods-arguments: true
  params: count=countSql

################################################################### security oauth2
# 特别注意：
#  1.这里配置的url如果是 127.0.0.1，登陆成功后访问sso 认证服务器时也只能以这个ip地址访问，不能用 localhost，
#    除非你配置的是localhost,否则，在访问认证服务器的时候，sso会让你重新登陆，具体原因未查明，但经过测试结果是这样的
#    这句话的意思就是：
#     如下面的 access-token-url  和 user-authorization-uri 配置的ip 是127.0.0.1,
#     在登陆成功后，也只能是 http://127.0.0.1:8080来访问认证服务器，如果用 http://localhost:8080来访问认证服务器， 认证服务器会让你登陆。
#  2. 以本项目中的 pms 与 emi 举例，如果 pms 中配置的是 127.0.0.1 ,而 emi 中配置的是 localhost,
#     如果 pms通过认证， 在访问emi时，也需要再登陆一次，即不会实现单点,
#     通过浏览器查看cookie可知，使用 127.0.0.1  和  localhost 访问的时候， 浏览器带上的cookie信息是不一样的
security:
  oauth2:
    client:
      client-id: 4028c08162b9340f0162b93427c40000
      client-secret: 4028c08162b9340f0162b93427c40000
      access-token-uri: http://127.0.0.1:8771/oauth2/oauth/token
      user-authorization-uri: http://127.0.0.1:8771/oauth2/oauth/authorize
#      use-current-uri: false
#      pre-established-redirect-uri: http://127.0.0.1:8771/pms/login
    resource:
      jwt:
        key-uri: http://127.0.0.1:8771/oauth2/oauth/token_key
    sso:
      login-path: /login

hk:
  authentication:
    browser:
      logout-url: /logout
      logout-success-url: http://127.0.0.1:8771/oauth2/oauth/logout?redirect_url=http://127.0.0.1:8771/pms/index
      gate-way-host: http://127.0.0.1:8771/pms
#      permit-all-matchers:
#        - method: GET
#          uris:
#            - /api/**
#          permission: admin
#        - method: GET
#          uris:
#            - /aaaa/**
#          permission: admin
    default-failure-url: http://127.0.0.1:8771/pms/error  #使用了gateway这里写上gateway访问的路径，如果是前后端分离项目，可以不需要这样写
######################################################### swagger 文档生成配置
  swagger:
    title: "XXX公司_统一用户管理系统_接口文档"
    description: "用户管理系统..."
    version: "2.0.2.RELEASE"
    base-package: "com.hk.pms.controller"
######################################################### logging 配置
logging:
  level:
    root: error
    org.springframework.security: debug
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: debug
    org.springframework.jdbc.core.JdbcTemplate: debug
    org.springframework.jdbc.core.StatementCreatorUtils: debug
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: debug
    com.hk: debug





